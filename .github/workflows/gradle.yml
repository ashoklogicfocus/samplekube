name: Build and User Approval Workflow

on:
  push:
    branches:
      - master

jobs:
  Pre-Dev-Steps:
    runs-on: ubuntu-latest

    steps:
      - name: 'Run some predev steps'
        shell: pwsh
        run: |
          Write-Host 'Done some pre dev env deploy work'

  Dev-Env:
    runs-on: ubuntu-latest
    needs: Pre-Dev-Steps
    environment:
      name: DEVENV
    steps:
      - name: 'Run some dev env steps'
        shell: pwsh
        run: |
          Write-Host 'Done some dev env deploy work'

  User-Approval:
    runs-on: ubuntu-latest
    needs: Dev-Env
    if: always()
    steps:
      - name: 'Request user approval'
        id: approval
        uses: "actions/github-script@v6"
        with:
          script: |
            const { data: approvals } = await github.repos.listAppsWithAccessToProtectedBranch({
              ...context.repo,
              branch: context.payload.ref.replace('refs/heads/', '')
            });

            const approver = approvals.find(approval => approval.slug === 'approved-slug'); // Replace 'approved-slug' with your approver's GitHub username

            if (!approver) {
              throw new Error('Approver not found');
            }

            const { data: reviews } = await github.pulls.listReviews({
              ...context.repo,
              pull_number: context.payload.pull_request.number
            });

            const approvedReview = reviews.find(review => review.user.login === approver.login && review.state === 'APPROVED');

            if (!approvedReview) {
              throw new Error('Approval not granted');
            }

            console.log('Approval granted');
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}

